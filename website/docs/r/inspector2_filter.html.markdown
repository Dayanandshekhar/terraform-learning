---
subcategory: "Inspector V2"
layout: "aws"
page_title: "AWS: aws_inspector2_filter"
description: |-
    Creates a InspectorV2 filter rule.
---

# Resource: aws_inspector2_filter

Terraform resource for managing an AWS Inspector2 filter rules.

## Example Usage

```terraform
resource "aws_inspector2_filter" "example" {
  name   = "name"
  action = "action"

  description = "description"
  reason      = "reason"

  filter_criteria {
    aws_account_id {
      comparison = "EQUALS"
      value      = "12345678"
    }

    ecr_image_pushed_at {
      end_inclusive   = "2021-01-31T00:00:00Z"
      start_inclusive = "2021-01-01T00:00:00Z"
    }

    inspector_score {
      lower_inclusive = "1"
      upper_inclusive = "10"
    }

    resource_tags {
      comparison = "EQUALS"
      key        = "resource_key"
      value      = "resource_value"
    }

    vulnerable_packages {
      architecture {
        comparison = "EQUALS"
        value      = "architecture"
      }
      epoch {
        lower_inclusive = "10"
        upper_inclusive = "1"
      }
      name {
        comparison = "EQUALS"
        value      = "name"
      }
      release {
        comparison = "EQUALS"
        value      = "release"
      }
      source_layer_hash {
        comparison = "EQUALS"
        value      = "source_layer_hash"
      }
      version {
        comparison = "EQUALS"
        value      = "version"
      }
    }
  }
}
```

## Argument Reference

The following arguments are required:

* `action` - (Required) The action that is to be applied to the findings that match the filter. ()
* `filter_criteria` - (Required) Details on the filter criteria associated with this filter.

The following arguments are optional:

* `description` - (Optional) A description of the filter.
* `name` - (Optional) Name of the filter. By default, generated by Terraform.
* `name_prefix`- (Optional) Creates a unique name beginning with the specified prefix. Conflicts with `name`.
* `reason` - (Optional) Reason for the filter.
* `tags` - (Optional) Key-value mapping of resource tags. If configured with a provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block) present, tags with matching keys will overwrite those defined at the provider-level.
* `tags_all` - Map of tags assigned to the resource, including those inherited from the provider [`default_tags` configuration block](/docs/providers/aws/index.html#default_tags-configuration-block).

### filter_criteria

The `filter_criteria` configuration block supports the following:

* `aws_account_id` - (Optional) Amazon Web Services account IDs used to filter findings. (Type: String Filter)
* `component_id` - (Optional) Component IDs used to filter findings. (Type: String Filter)
* `component_type` - (Optional) Component types used to filter findings. (Type: String Filter)
* `ec2_instance_image_id` - (Optional) Amazon EC2 instance image IDs used to filter findings. (Type: String Filter)
* `ec2_instance_subnet_id` - (Optional) Amazon EC2 instance subnet IDs used to filter findings. (Type: String Filter)
* `ec2_instance_vpc_id` - (Optional) Amazon EC2 instance VPC IDs used to filter findings. (Type: String Filter)
* `ecr_image_architecture` - (Optional) Amazon ECR image architecture types used to filter findings. (Type: String Filter)
* `ecr_image_hash` - (Optional) Amazon ECR image hashes used to filter findings. (Type: String Filter)
* `ecr_image_pushed_at` - (Optional) Amazon ECR image push date and time used to filter findings. (Type: Date Filter)
* `ecr_image_registry` - (Optional) Amazon ECR registry used to filter findings. (Type: String Filter)
* `ecr_image_repository_name` - (Optional) Name of the Amazon ECR repository used to filter findings. (Type: String Filter)
* `ecr_image_tags` - (Optional) Tags attached to the Amazon ECR container image. (Type: String Filter)
* `finding_arn` - (Optional) ARNs used to filter findings. (Type: String Filter)
* `finding_status` - (Optional) Status types used to filter findings. (Type: String Filter)
* `finding_type` - (Optional)  Types used to filter findings. (Type: String Filter)
* `first_observed_at` - (Optional) Fate and time a finding was first seen used to filter findings. (Type: Date Filter)
* `inspector_score` - (Optional)  Amazon Inspector score to filter on. (Type: Number Filter)
* `last_observed_at` - (Optional) Date and time a finding was last seen used to filter findings. (Type: Date Filter)
* `network_protocol` - (Optional) Ingress source addresses used to filter findings. (Type: String Filter)
* `port_range` - (Optional) Port ranges used to filter findings. (Type: Port Range Filter)
* `related_vulnerabilities` - (Optional) Related vulnerabilities used to filter findings. (Type: String Filter)
* `resource_id` - (Optional) Resource IDs used to filter findings. (Type: String Filter)
* `resource_tags` - (Optional) Resource tags used to filter findings. (Type: Map Filter)
* `resource_type` - (Optional) Resource types used to filter findings. (Type: String Filter)
* `severity` - (Optional) Severity used to filter findings. (Type: String Filter)
* `title` - (Optional) Title used to filter findings. (Type: String Filter)
* `updated_at` - (Optional) Date and time a finding was last updated at used to filter (Type: Date Filter)
* `vendor_severity` - (Optional) Vendor severity used to filter findings. (Type: String Filter)
* `vulnerability_id` - (Optional) Vulnerability ID used to filter findings. (Type: String Filter)
* `vulnerability_source` - (Optional) Vulnerability type used to filter findings. (Type: String Filter)
* `vulnerable_packages` - (Optional) Vulnerable packages used to filter findings. (Type: Package Filter)

### Filter Types

##### Date Filter

* `end_inclusive` -(Required) A timestamp representing the end of the time period filtered on. (RFC3339)
* `start_inclusive` - (Required) A timestamp representing the start of the time period filtered on. (RFC3339)

##### String Filters

* `comparison` - (Required) The operator to use when comparing values in the filter. (Must be EQUALS or NOT_EQUALS)
* `value` - (Required) The value to filter on.

##### Map Filter

* `comparison` - (Required) The operator to use when comparing values in the filter. (Must be EQUALS)
* `key` - (Required) The tag value used in the filter.
* `value`- (Optional) The value to filter on.

##### Number Filter

* `lower_inclusive` - (Optional) The lowest number to be included in the filter.
* `upper_inclusive` - (Optional) The highest number to be included in the filter.

##### Package Filter

* `architecture`- (Optional) An object that contains details on the package architecture type to filter on. (Type: String Filter)
* `epoch` - (Optional) An object that contains details on the package epoch to filter on. (Type: Number Filter)
* `name` - (Optional) An object that contains details on the name of the package to filter on. (Type: String Filter)
* `release` - (Optional) An object that contains details on the package release to filter on. (Type: String Filter)
* `source_layer_hash` - (Optional) An object that contains details on the source layer hash to filter on. (Type: String Filter)
* `version` - (Optional) The package version to filter on. (Type: String Filter)

##### Port Range Filter

* `begin_inclusive` - (Optional) - The port number the port range begins at.
* `end_inclusive` - (Optional) - The port number the port range ends at.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - ARN of the Filter.
* `owner_id` - Amazon Web Services account ID of the account that created the filter.

## Timeouts

[Configuration options](https://www.terraform.io/docs/configuration/blocks/resources/syntax.html#operation-timeouts):

* `create` - (Default `5m`)
* `update` - (Default `5m`)
* `delete` - (Default `5m`)

## Import

Inspector2 Filter rule can be imported using the `arn`, e.g.,

```
$ terraform import aws_inspector2_filter.example ARN
```

[1]: https://docs.aws.amazon.com/inspector/latest/user/findings-managing-filtering.html