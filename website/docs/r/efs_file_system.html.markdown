---
subcategory: "EFS"
layout: "aws"
page_title: "AWS: aws_efs_file_system"
description: |-
  Provides an Elastic File System (EFS) resource.
---

# Resource: aws_efs_file_system

Provides an Elastic File System (EFS) resource.

## Example Usage

### Basic Usage

```hcl
resource "aws_efs_file_system" "example" {
  creation_token   = "my-product"
  performance_mode = "maxIO"

  tags = {
    Name = "MyProduct"
  }
}
```

### Policy

```hcl
data "aws_iam_policy_document" "example" {
  statement {
    actions = [
      "elasticfilesystem:ClientMount",
      "elasticfilesystem:ClientWrite",
    ]

    principals {
      type        = "AWS"
      identifiers = ["*"]
    }

    resources = ["*"]
  }
}

resource "aws_efs_file_system" "example" {
  policy = data.aws_iam_policy_document.test.json
}
```

### Lifecycle Policy

```hcl
resource "aws_efs_file_system" "example" {
  lifecycle_policy {
    transition_to_ia = "AFTER_30_DAYS"
  }
}
```

## Argument Reference

The following arguments are supported:

* `creation_token` - (Optional) A unique name (a maximum of 64 characters are allowed)
used as reference when creating the Elastic File System to ensure idempotent file
system creation. By default generated by Terraform. See [Elastic File System]
(http://docs.aws.amazon.com/efs/latest/ug/) user guide for more information.
* `encrypted` - (Optional) If true, the disk will be encrypted.
* `kms_key_id` - (Optional) The ARN for the KMS encryption key. When specifying kms_key_id, encrypted needs to be set to true.
* `policy` â€“ (Optional) The [file system resource-based policy](https://docs.aws.amazon.com/efs/latest/ug/API_PutFileSystemPolicy.html). Accepts a JSON formatted policy definition.
* `lifecycle_policy` - (Optional) A file system [lifecycle policy](https://docs.aws.amazon.com/efs/latest/ug/API_LifecyclePolicy.html) object (documented below).
* `performance_mode` - (Optional) The file system performance mode. Can be either `"generalPurpose"` or `"maxIO"` (Default: `"generalPurpose"`).
* `throughput_mode` - (Optional) Throughput mode for the file system. Defaults to `bursting`. Valid values: `bursting`, `provisioned`. When using `provisioned`, also set `provisioned_throughput_in_mibps`.
* `provisioned_throughput_in_mibps` - (Optional) The throughput, measured in MiB/s, that you want to provision for the file system. Only applicable with `throughput_mode` set to `provisioned`.
* `tags` - (Optional) A mapping of tags to assign to the file system.

`lifecycle_policy` supports the following:

* `transition_to_ia` - (Optional) Indicates how long it takes to transition files to the IA storage class. Valid values: `AFTER_7_DAYS`, `AFTER_14_DAYS`, `AFTER_30_DAYS`, `AFTER_60_DAYS`, or `AFTER_90_DAYS`.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `arn` - Amazon Resource Name of the file system.
* `id` - The ID that identifies the file system (e.g. fs-ccfc0d65).
* `dns_name` - The DNS name for the filesystem per [documented convention](http://docs.aws.amazon.com/efs/latest/ug/mounting-fs-mount-cmd-dns-name.html).

## Import

The EFS file systems can be imported using the `id`, e.g.

```
$ terraform import aws_efs_file_system.foo fs-6fa144c6
```
