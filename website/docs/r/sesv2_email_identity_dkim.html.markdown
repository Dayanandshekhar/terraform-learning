---
subcategory: "SES (Simple Email)"
layout: "aws"
page_title: "AWS: aws_sesv2_email_identity_dkim"
description: |-
  Provides an SES email identity DKIM generation resource
---

# Resource: aws_sesv2_email_identity_dkim

Provides an SES email identity DKIM generation resource.

~> **Note:** All arguments including the private key will be stored in the raw state as plain-text.
[Read more about sensitive data in state](https://www.terraform.io/docs/state/sensitive-data.html).

## Argument Reference

The following arguments are supported:

* `identity` - (Required) Email identity name to generate DKIM tokens for.
* `origin` - (Optional) Indicates how DKIM was configured for the identity.
  The possible values are: `AWS_SES` and `EXTERNAL`. Defaults to `AWS_SES`.
* `selector` - (Optional) - A string that's used to identify a public key in the
  DNS configuration for a domain. Required when `origin` is set to `EXTERNAL`.
* `private_key` - (Optional) A private key that's used to generate a DKIM
  signature. The private key must use 1024 or 2048-bit RSA encryption. Required
  when `origin` is set to `EXTERNAL`.
* `next_signing_key_length` - (Optional) The key length of the future DKIM key
  pair to be generated. This can be changed at most once per day. Conflicts with
  `selector` and `private_key`. The possible values are: `RSA_1024_BIT` and
  `RSA_2048_BIT`. Required when `origin` is set to `AWS_SES`.
* `signing_enabled` - (Optional) When you set this value true, then the messages
  that are sent from the identity are signed using DKIM. If you set this value
  to false, your messages are sent without DKIM signing. Defaults to `true`.

## Attributes Reference

In addition to all arguments above, the following attributes are exported:

* `dkim_tokens` - DKIM tokens generated by SES.
  These tokens should be used to create DNS records used to verify SES DKIM.
  See below for an example of how this might be achieved
  when the domain is hosted in Route 53 and managed by Terraform.
  Find out more about verifying domains in Amazon SES
  in the [AWS SES docs](https://docs.aws.amazon.com/ses/latest/dg/send-email-authentication-dkim-easy-managing.html).
* `public_key` - A public part of the RSA private key. The value is set when
  `origin` is `EXTERNAL` and `selector`, `private_key` areguments are defined.
* `current_signing_key_length` - The key length of the DKIM key pair in use.
* `status` - Describes whether or not Amazon SES has successfully located the
  DKIM records in the DNS records for the domain.

## Example Usage

### SES Easy DKIM

```terraform
resource "aws_sesv2_email_identity" "example" {
  identity = "example.com"
}

resource "aws_sesv2_email_dkim" "example" {
  identity = aws_sesv2_email_identity.example.identity
  next_signing_key_length = "RSA_2048_BIT"
}

resource "aws_route53_record" "example_amazonsesv2_dkim_record" {
  count   = 3
  zone_id = "ABCDEFGHIJ123"
  name    = "${element(aws_sesv2_email_identity_dkim.example.dkim_tokens, count.index)}._domainkey"
  type    = "CNAME"
  ttl     = "600"
  records = ["${element(aws_sesv2_email_identity_dkim.example.dkim_tokens, count.index)}.dkim.amazonses.com"]
}
```

### SES Bring Your Own DKIM (BYODKIM)

```terraform
resource "aws_sesv2_email_identity" "example" {
  identity = "example.com"
}

resource "aws_sesv2_email_identity_dkim" "example" {
  identity    = aws_sesv2_email_identity.example.identity
  origin      = "EXTERNAL"
  private_key = file("rsa.key")
  selector    = "byodkim"
}

resource "aws_route53_record" "example_amazonsesv2_dkim_record" {
  zone_id = "ABCDEFGHIJ123"
  name    = "${aws_sesv2_email_identity_dkim.example.selector}._domainkey"
  type    = "TXT"
  ttl     = "600"
  records = ["p=${aws_sesv2_email_identity_dkim.example.public_key}"]
}
```

## Import

DKIM tokens can be imported using the `identity` attribute, e.g.,

```
$ terraform import aws_sesv2_email_identity_dkim.example example.com
```
