---
subcategory: "Service Catalog AppRegistry"
layout: "aws"
page_title: "AWS: aws_servicecatalogappregistry_application"
description: |-
  Terraform resource for managing an AWS Service Catalog AppRegistry Application.
---

<!-- Please do not edit this file, it is generated. -->
# Resource: aws_servicecatalogappregistry_application

Terraform resource for managing an AWS Service Catalog AppRegistry Application.

~> An AWS Service Catalog AppRegistry Application is displayed in the AWS Console under "MyApplications".

## Example Usage

### Basic Usage

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ServicecatalogappregistryApplication } from "./.gen/providers/aws/servicecatalogappregistry-application";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    new ServicecatalogappregistryApplication(this, "example", {
      name: "example-app",
    });
  }
}

```

### Connecting Resources

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { S3Bucket } from "./.gen/providers/aws/s3-bucket";
import { ServicecatalogappregistryApplication } from "./.gen/providers/aws/servicecatalogappregistry-application";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    const example = new ServicecatalogappregistryApplication(this, "example", {
      name: "example-app",
    });
    new S3Bucket(this, "bucket", {
      bucket: "example-bucket",
      tags: {
        awsApplication: example.arn,
      },
    });
  }
}

```

## Argument Reference

The following arguments are required:

* `name` - (Required) Name of the application. The name must be unique within an AWS region.

The following arguments are optional:

* `description` - (Optional) Description of the application.

## Attribute Reference

This resource exports the following attributes in addition to the arguments above:

* `arn` - ARN (Amazon Resource Name) of the application.
* `id` - Identifier of the application.

## Import

In Terraform v1.5.0 and later, use an [`import` block](https://developer.hashicorp.com/terraform/language/import) to import Service Catalog AppRegistry Application using the `id`. For example:

```typescript
// DO NOT EDIT. Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
import { Construct } from "constructs";
import { TerraformStack } from "cdktf";
/*
 * Provider bindings are generated by running `cdktf get`.
 * See https://cdk.tf/provider-generation for more details.
 */
import { ServicecatalogappregistryApplication } from "./.gen/providers/aws/servicecatalogappregistry-application";
class MyConvertedCode extends TerraformStack {
  constructor(scope: Construct, name: string) {
    super(scope, name);
    ServicecatalogappregistryApplication.generateConfigForImport(
      this,
      "example",
      "application-id-12345678"
    );
  }
}

```

Using `terraform import`, import AWS Service Catalog AppRegistry Application using the `id`. For example:

```console
% terraform import aws_servicecatalogappregistry_application.example application-id-12345678
```

<!-- cache-key: cdktf-0.20.1 input-4da657cc84ae65dfe973ec248ecedd328ddc7679a273bd609b2c5bc7b7b3b88a -->