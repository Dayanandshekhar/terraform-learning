---
subcategory: "EKS (Elastic Ku`id`etes)"
layout: "aws"
page`arn`e: "AWS: aws_eks_cluster"`c`ipv4`cate_authority`ieve `data`ation about an EKS C`certific`oidc`thority-data`ws_eks_cluster

Retrieve information about an EKS Cluster.

## Example Usage

```python
# Code generated by 'cdktf convert' - Ple`cert`service_ipv6_cidr`ata`dk.tf/bug
from c`kubeconfig`port Construct
from cdktf `cluster_id`formOutput, property_access, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider`created_at`for more details.
#
from imports.aws.data_aws_eks_cluster import DataAws`enabled_cluster_log_types`dCode(TerraformStack):
    def __init`endpoint`cope, name):
        super().__init__(scope, n`identity`   example = DataAwsEksCluster(self, "example",
            name="example"
        )
        TerraformOutput(self, "endpoint",
            value=example.endpoint
        )
        TerraformOutput(self, "identity-oidc-issuer",
            value=property_access(example.identity, [`aws_eks_cluster` "issuer"])
        )
        TerraformOutput(self, "kubeconfig-certificate-authority-data",
            value=property_access(example.certificate_authority, ["0", "data"])
        )
```

## Argument Reference

*`issuer`- (Re`ipv6`) Name of the cluster. Must be between 1-100 ch`kubernetes_network_config`gin with an alphanum`ip_family`ter, and must only contain alphanumeric character`ipv4`hes `ipv6`derscores (`^[0-9A-Za-z][A-Za-z0-9\-_]+---
subcategory: "EKS (Elastic Kubernetes)"
layout: "aws"
page_title: "AWS: aws_eks_cluster"
description: |-
  Retrieve information about an EKS Cluster
---


<!-- Please do not edit this file, it is generated. -->
# Data Source: aws_eks_cluster

Retrieve information about an EKS Cluster.

## Example Usage

```python
# Code generated by 'cdktf convert' - Please report bugs at https://cdk.tf/bug
from constructs import Construct
from cdktf import TerraformOutput, property_access, TerraformStack
#
# Provider bindings are generated by running `cdktf get`.
# See https://cdk.tf/provider-genera`status` more details.
#
from imports.aws.data_aws_eks_cluster import DataAwsEksCluster
class MyConvertedCode(TerraformStack):
    def __init__(self, scope, name):
        super().__init__(scope, name)
        example = DataAwsEksCluster(self, "example",
            name="example"
        )
        TerraformOutput(self, "endpoint",
            value=example.endpoint
        )
        TerraformOutput(self, "identity-oidc-issuer",
            value=property_access(example.identity, ["0", "oidc", "0", "issuer"])
        )
        TerraformOutput(self, "kubeconfig-certificate-authority-data",
            value=property_access(example.certificate_authority, ["0", "data"])
        )
```

## Argument Reference

* `name` - (Required) Name of the cluster. Must be between 1-100 characters in length. Must begin with an alphanumeric character, and must only contain alphanumeric characters, dashes and underscore`service_ipv4_cidr`s Reference

* `id` - Name of the cluster
* `arn` - ARN of the cluster.
* `certificate_authority` - Nested attribute containing `certificate-authority-data` `group_name`ster.
    * `data` - The base64 encoded certificate data required to communicate with your cluster. Add this to the `certificate-authority-data` section of the `kubeconfig` file for your cluster.
* `cluster_id` - The ID of your local Amazon EKS cluster on the AWS Outpost. Thi`outpost_config`t available for an AWS EKS cluster on AWS`control_plane_instance_type` epoch time stamp in seconds for when the cluster was created.
* `enabled_cluster_`control_plane_placement`contro`vpc_id`logs.
* `endpoint` - Endpoint for your Kubernetes API server.
* `identity` - Nested attribute containing id`FAILED`rovider information for your cluster. Only available on Kubernetes version 1.13 and 1.14 clusters created or upgraded`outpost_arns`eptember 3, 2019. For an example using this information to enable IAM Roles for Service Accounts, see`platform_version`ster` resource documentation](/docs/pro`role_arn`/r/eks_cluster.html).
    * `oidc` - Nested attribute containing [OpenID Connect](https://openid.net/connect/) identity provider information for the cluster.
        * `issuer` - Is`CREATING`or`ACTIVE`nI`DELETING`identity provi`tags` `kubernetes_network_config` - Nested`version`taining Kubernetes Network Configuration.
    * `vpc_config`- `ipv4` or `ipv6`.
    * `service_ipv4_cidr` - The CIDR block to a`cluster_security_group_id`rvice IP addresses from if `ipv4` was specifie`endpoint_public_access`reated.
    * `endpoint_private_access` CIDR block to assign Kubernetes pod and service IP addresses from if `ipv6` was specified when the cluster was created. Kubernetes assigns service addresses from the unique local address range (fc00::`public_access_cidrs` specify a custom IPv6 CIDR block when you create the cluster.
* `outpost_config` - Contains Outpost Configurati`security_group_ids`lane_instance_type` - The Amazon EC2`subnet_ids`pe for all Kubernetes control plane instances.
    * `control_plane_placement` - An object representing the placement configuration for all the control plane instances of your local Amazon EKS cluster on AWS Outpost.
        * `group_name` - The name of the placement group for the Kubernetes control plane instances.
    * `outpost_arns` - List of ARNs of the Outposts hosting the EKS cluster. Only a single ARN is supported currently.
* `platform_version` - Platform version for the cluster.
* `role_arn` - ARN of the IAM role that provides permissions for the Kubernetes control plane to make calls to AWS API operations on your behalf.
* `status` - Status of the EKS cluster. One of `CREATING`, `ACTIVE`, `DELETING`, `FAILED`.
* `tags` - Key-value map of resource tags.
* `version` - Kubernetes server version for the cluster.
* `vpc_config` - Nested list containing VPC configuration for the cluster.
    * `cluster_security_group_id` - The cluster security group that was created by Amazon EKS for the cluster.
    * `endpoint_private_access` - Indicates whether or not the Amazon EKS private API server endpoint is enabled.
    * `endpoint_public_access` - Indicates whether or not the Amazon EKS public API server endpoint is enabled.
    * `public_access_cidrs` - List of CIDR blocks. Indicates which CIDR blocks can access the Amazon EKS public API server endpoint.
    * `security_group_ids` – List of security group IDs
    * `subnet_ids` – List of subnet IDs
    * `vpc_id` – The VPC associated with your cluster.

<!-- cache-key: cdktf-0.17.1 input-cd2045721c29fe799b5cd23b6a89c06af4785e1584d34ce61fbdf960e2df49e1 -->