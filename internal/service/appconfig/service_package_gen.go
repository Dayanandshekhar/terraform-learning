// Code generated by internal/generate/servicepackages/main.go; DO NOT EDIT.

package appconfig

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []func(context.Context) (datasource.DataSourceWithConfigure, error) {
	return []func(context.Context) (datasource.DataSourceWithConfigure, error){}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []func(context.Context) (resource.ResourceWithConfigure, error) {
	return []func(context.Context) (resource.ResourceWithConfigure, error){}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) map[string]func() *schema.Resource {
	return map[string]func() *schema.Resource{
		"aws_appconfig_configuration_profile":  DataSourceConfigurationProfile,
		"aws_appconfig_configuration_profiles": DataSourceConfigurationProfiles,
		"aws_appconfig_environment":            DataSourceEnvironment,
		"aws_appconfig_environments":           DataSourceEnvironments,
	}
}

func (p *servicePackage) SDKResources(ctx context.Context) map[string]func() *schema.Resource {
	return map[string]func() *schema.Resource{
		"aws_appconfig_application":                  ResourceApplication,
		"aws_appconfig_configuration_profile":        ResourceConfigurationProfile,
		"aws_appconfig_deployment":                   ResourceDeployment,
		"aws_appconfig_deployment_strategy":          ResourceDeploymentStrategy,
		"aws_appconfig_environment":                  ResourceEnvironment,
		"aws_appconfig_extension":                    ResourceExtension,
		"aws_appconfig_extension_association":        ResourceExtensionAssociation,
		"aws_appconfig_hosted_configuration_version": ResourceHostedConfigurationVersion,
	}
}

func (p *servicePackage) ServicePackageName() string {
	return names.AppConfig
}

var ServicePackage = &servicePackage{}
