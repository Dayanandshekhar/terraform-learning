// Code generated by internal/generate/servicepackages/main.go; DO NOT EDIT.

package storagegateway

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []func(context.Context) (datasource.DataSourceWithConfigure, error) {
	return []func(context.Context) (datasource.DataSourceWithConfigure, error){}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []func(context.Context) (resource.ResourceWithConfigure, error) {
	return []func(context.Context) (resource.ResourceWithConfigure, error){}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) map[string]func() *schema.Resource {
	return map[string]func() *schema.Resource{
		"aws_storagegateway_local_disk": DataSourceLocalDisk,
	}
}

func (p *servicePackage) SDKResources(ctx context.Context) map[string]func() *schema.Resource {
	return map[string]func() *schema.Resource{
		"aws_storagegateway_cache":                   ResourceCache,
		"aws_storagegateway_cached_iscsi_volume":     ResourceCachediSCSIVolume,
		"aws_storagegateway_file_system_association": ResourceFileSystemAssociation,
		"aws_storagegateway_gateway":                 ResourceGateway,
		"aws_storagegateway_nfs_file_share":          ResourceNFSFileShare,
		"aws_storagegateway_smb_file_share":          ResourceSMBFileShare,
		"aws_storagegateway_stored_iscsi_volume":     ResourceStorediSCSIVolume,
		"aws_storagegateway_tape_pool":               ResourceTapePool,
		"aws_storagegateway_upload_buffer":           ResourceUploadBuffer,
		"aws_storagegateway_working_storage":         ResourceWorkingStorage,
	}
}

func (p *servicePackage) ServicePackageName() string {
	return names.StorageGateway
}

var ServicePackage = &servicePackage{}
