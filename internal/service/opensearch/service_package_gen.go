// Code generated by internal/generate/servicepackages/main.go; DO NOT EDIT.

package opensearch

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []func(context.Context) (datasource.DataSourceWithConfigure, error) {
	return []func(context.Context) (datasource.DataSourceWithConfigure, error){}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []func(context.Context) (resource.ResourceWithConfigure, error) {
	return []func(context.Context) (resource.ResourceWithConfigure, error){}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) map[string]func() *schema.Resource {
	return map[string]func() *schema.Resource{
		"aws_opensearch_domain": DataSourceDomain,
	}
}

func (p *servicePackage) SDKResources(ctx context.Context) map[string]func() *schema.Resource {
	return map[string]func() *schema.Resource{
		"aws_opensearch_domain":                      ResourceDomain,
		"aws_opensearch_domain_policy":               ResourceDomainPolicy,
		"aws_opensearch_domain_saml_options":         ResourceDomainSAMLOptions,
		"aws_opensearch_inbound_connection_accepter": ResourceInboundConnectionAccepter,
		"aws_opensearch_outbound_connection":         ResourceOutboundConnection,
	}
}

func (p *servicePackage) ServicePackageName() string {
	return names.OpenSearch
}

var ServicePackage = &servicePackage{}
