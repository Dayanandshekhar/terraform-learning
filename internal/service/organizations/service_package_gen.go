// Code generated by internal/generate/servicepackages/main.go; DO NOT EDIT.

package organizations

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []func(context.Context) (datasource.DataSourceWithConfigure, error) {
	return []func(context.Context) (datasource.DataSourceWithConfigure, error){}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []func(context.Context) (resource.ResourceWithConfigure, error) {
	return []func(context.Context) (resource.ResourceWithConfigure, error){}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) map[string]func() *schema.Resource {
	return map[string]func() *schema.Resource{
		"aws_organizations_delegated_administrators":                DataSourceDelegatedAdministrators,
		"aws_organizations_delegated_services":                      DataSourceDelegatedServices,
		"aws_organizations_organization":                            DataSourceOrganization,
		"aws_organizations_organizational_unit_child_accounts":      DataSourceOrganizationalUnitChildAccounts,
		"aws_organizations_organizational_unit_descendant_accounts": DataSourceOrganizationalUnitDescendantAccounts,
		"aws_organizations_organizational_units":                    DataSourceOrganizationalUnits,
		"aws_organizations_resource_tags":                           DataSourceResourceTags,
	}
}

func (p *servicePackage) SDKResources(ctx context.Context) map[string]func() *schema.Resource {
	return map[string]func() *schema.Resource{
		"aws_organizations_account":                 ResourceAccount,
		"aws_organizations_delegated_administrator": ResourceDelegatedAdministrator,
		"aws_organizations_organization":            ResourceOrganization,
		"aws_organizations_organizational_unit":     ResourceOrganizationalUnit,
		"aws_organizations_policy":                  ResourcePolicy,
		"aws_organizations_policy_attachment":       ResourcePolicyAttachment,
	}
}

func (p *servicePackage) ServicePackageName() string {
	return names.Organizations
}

var ServicePackage = &servicePackage{}
