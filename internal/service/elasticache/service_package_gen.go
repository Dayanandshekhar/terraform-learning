// Code generated by internal/generate/servicepackages/main.go; DO NOT EDIT.

package elasticache

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []func(context.Context) (datasource.DataSourceWithConfigure, error) {
	return []func(context.Context) (datasource.DataSourceWithConfigure, error){}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []func(context.Context) (resource.ResourceWithConfigure, error) {
	return []func(context.Context) (resource.ResourceWithConfigure, error){}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) map[string]func() *schema.Resource {
	return map[string]func() *schema.Resource{
		"aws_elasticache_cluster":           DataSourceCluster,
		"aws_elasticache_replication_group": DataSourceReplicationGroup,
		"aws_elasticache_subnet_group":      DataSourceSubnetGroup,
		"aws_elasticache_user":              DataSourceUser,
	}
}

func (p *servicePackage) SDKResources(ctx context.Context) map[string]func() *schema.Resource {
	return map[string]func() *schema.Resource{
		"aws_elasticache_cluster":                  ResourceCluster,
		"aws_elasticache_global_replication_group": ResourceGlobalReplicationGroup,
		"aws_elasticache_parameter_group":          ResourceParameterGroup,
		"aws_elasticache_replication_group":        ResourceReplicationGroup,
		"aws_elasticache_security_group":           ResourceSecurityGroup,
		"aws_elasticache_subnet_group":             ResourceSubnetGroup,
		"aws_elasticache_user":                     ResourceUser,
		"aws_elasticache_user_group":               ResourceUserGroup,
		"aws_elasticache_user_group_association":   ResourceUserGroupAssociation,
	}
}

func (p *servicePackage) ServicePackageName() string {
	return names.ElastiCache
}

var ServicePackage = &servicePackage{}
