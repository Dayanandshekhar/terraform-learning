// Code generated by internal/generate/servicepackages/main.go; DO NOT EDIT.

package fsx

import (
	"context"

	"github.com/hashicorp/terraform-plugin-framework/datasource"
	"github.com/hashicorp/terraform-plugin-framework/resource"
	"github.com/hashicorp/terraform-plugin-sdk/v2/helper/schema"
	"github.com/hashicorp/terraform-provider-aws/names"
)

type servicePackage struct{}

func (p *servicePackage) FrameworkDataSources(ctx context.Context) []func(context.Context) (datasource.DataSourceWithConfigure, error) {
	return []func(context.Context) (datasource.DataSourceWithConfigure, error){}
}

func (p *servicePackage) FrameworkResources(ctx context.Context) []func(context.Context) (resource.ResourceWithConfigure, error) {
	return []func(context.Context) (resource.ResourceWithConfigure, error){}
}

func (p *servicePackage) SDKDataSources(ctx context.Context) map[string]func() *schema.Resource {
	return map[string]func() *schema.Resource{
		"aws_fsx_openzfs_snapshot": DataSourceOpenzfsSnapshot,
	}
}

func (p *servicePackage) SDKResources(ctx context.Context) map[string]func() *schema.Resource {
	return map[string]func() *schema.Resource{
		"aws_fsx_backup":                        ResourceBackup,
		"aws_fsx_data_repository_association":   ResourceDataRepositoryAssociation,
		"aws_fsx_file_cache":                    ResourceFileCache,
		"aws_fsx_lustre_file_system":            ResourceLustreFileSystem,
		"aws_fsx_ontap_file_system":             ResourceOntapFileSystem,
		"aws_fsx_ontap_storage_virtual_machine": ResourceOntapStorageVirtualMachine,
		"aws_fsx_ontap_volume":                  ResourceOntapVolume,
		"aws_fsx_openzfs_file_system":           ResourceOpenzfsFileSystem,
		"aws_fsx_openzfs_snapshot":              ResourceOpenzfsSnapshot,
		"aws_fsx_openzfs_volume":                ResourceOpenzfsVolume,
		"aws_fsx_windows_file_system":           ResourceWindowsFileSystem,
	}
}

func (p *servicePackage) ServicePackageName() string {
	return names.FSx
}

var ServicePackage = &servicePackage{}
